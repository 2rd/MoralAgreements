{"version":3,"sources":["logo.svg","nav/nav.jsx","questionaire/loading/loading.jsx","creategame/creategame.jsx","homescreen/inputpin/inputpin.jsx","homescreen/homescreen.jsx","questionaire/questionaire.jsx","summary/summary.jsx","App.js","serviceWorker.js","creategame/created/created.jsx","index.js"],"names":["module","exports","Nav","state","className","to","Component","Loading","class","CreateGame","title","description","theories","questions","initiated","currentlyChaning","flipCoin","awaitingCreation","submitQuestion","e","preventDefault","target","currentQuestions","console","log","question","question_id","text","value","img","option_1","getQuestionTheories","option_2","option_3","push","setState","document","getElementsByName","reset","handleInitFormChange","name","handleInitFormSubmit","handleFlipCheck","checked","form","optionIndex","allTheories","i","length","type","includes","indexOf","getAllTheories","createQuestionaire","async","questionaire","axios","post","params","then","response","props","history","pathname","data","catch","error","this","onSubmit","placeholder","required","onChange","t","disabled","onClick","InputPin","initialValue","index","style","padding","inputStyle","borderColor","inputFocusStyle","onComplete","redir","Homescreen","redirect","Questionaire","started","isLoading","currentQuestionIndex","currentQuestion","scores","answers","reloadImg","uuidv1","incrementScore","currentScores","map","theory","score","newScore","decrementScore","generateScores","temp","nextQuestion","option","curr","answer","summary","questionaire_id","id","date","Date","fetchQuestionaire","get","ID","notFound","match","src","Summary","pushAnswers","location","App","testBackend","status","Boolean","window","hostname","Created","createdgame","generateLink","routing","exact","path","component","Creategame","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8c7801e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./nav.css\";\r\nclass Nav extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"placeholder-box\">\r\n        <div className=\"link-wrapper\">\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport \"./loading.css\";\r\nclass Loading extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"loading-wrapper\">\r\n        <div class=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport \"./creategame.css\";\r\nimport axios from \"axios\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport Nav from \"../nav/nav\";\r\nimport Loading from \"../questionaire/loading/loading\";\r\n\r\nclass CreateGame extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    theories: [],\r\n    questions: [],\r\n    initiated: false,\r\n    currentlyChaning: 0,\r\n    flipCoin: false,\r\n    awaitingCreation: false,\r\n  };\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div className=\"creategame-wrapper\">\r\n        <Nav />\r\n        {!this.state.initiated ? (\r\n          <div className=\"form-init-wrapper\">\r\n            <form\r\n              className=\"init-form\"\r\n              onSubmit={(e) => this.handleInitFormSubmit(e)}\r\n              onChange={(e) => this.handleInitFormChange(e)}\r\n            >\r\n              <label>Title</label>\r\n              <input name=\"title\" type=\"text\" required></input>\r\n              <label>Description</label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"description\"\r\n                className=\" textarea textarea-big\"\r\n                required\r\n              ></textarea>\r\n              <input className=\"nextbutton\" type=\"submit\" value=\"next\"></input>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div className=\"form-questions-wrapper\">\r\n            <form\r\n              name=\"question-form\"\r\n              className=\"question-form\"\r\n              onSubmit={(e) => {\r\n                this.submitQuestion(e);\r\n              }}\r\n            >\r\n              <h2>Dilemma {this.state.currentlyChaning + 1}</h2>\r\n              <label>Image Link</label>\r\n              <input type=\"text\" name=\"img\" placeholder=\"optional\"></input>\r\n              <label>Text</label>\r\n              <textarea\r\n                className=\"textarea\"\r\n                type=\"text\"\r\n                name=\"text\"\r\n                required\r\n              ></textarea>\r\n              <label>Question</label>\r\n              <input type=\"text\" name=\"question\" required></input>\r\n              <div className=\"options-container\">\r\n                <div className=\"option-box\">\r\n                  <div className=\"option-header\">\r\n                    <label>Option 1</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"option_1\"\r\n                      className=\"option-text\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"chexbox-containers-wrapper\">\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Act Utilitarianism</label>\r\n                      <input\r\n                        name=\"au1\"\r\n                        value=\"Act Utilitarianism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Kantian Ethics</label>\r\n                      <input\r\n                        name=\"ke1\"\r\n                        value=\"Kantian Ethics\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Aristotelianism</label>\r\n                      <input\r\n                        name=\"ar1\"\r\n                        value=\"Aristotelianism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Ethical Egoism</label>\r\n                      <input\r\n                        name=\"ee1\"\r\n                        value=\"Ethical Egoism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Classical Natural Law Theory</label>\r\n                      <input\r\n                        name=\"cnlt1\"\r\n                        value=\"Classical Natural Law Theory\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div></div>\r\n                <div className=\"option-box\">\r\n                  <div className=\"option-header\">\r\n                    <label>Option 2</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"option_2\"\r\n                      className=\"option-text\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"chexbox-containers-wrapper\">\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Act Utilitarianism</label>\r\n                      <input\r\n                        name=\"au2\"\r\n                        value=\"Act Utilitarianism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Kantian Ethics</label>\r\n                      <input\r\n                        name=\"ke2\"\r\n                        value=\"Kantian Ethics\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Aristotelianism</label>\r\n                      <input\r\n                        name=\"ar2\"\r\n                        value=\"Aristotelianism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Ethical Egoism</label>\r\n                      <input\r\n                        name=\"ee2\"\r\n                        value=\"Ethical Egoism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Classical Natural Law Theory</label>\r\n                      <input\r\n                        name=\"cnlt2\"\r\n                        value=\"Classical Natural Law Theory\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flip-coin-container\">\r\n                <input\r\n                  onChange={(e) => this.handleFlipCheck(e)}\r\n                  t\r\n                  type=\"checkbox\"\r\n                ></input>\r\n                <label>\"Flip a coin\"-option?</label>\r\n              </div>\r\n              {this.state.flipCoin ? (\r\n                <div className=\"option-box\">\r\n                  <div className=\"option-header\">\r\n                    <label>Option 3</label>\r\n                    <input\r\n                      disabled\r\n                      type=\"text\"\r\n                      name=\"option_3\"\r\n                      value=\"Flip a coin\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"chexbox-containers-wrapper\">\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Act Utilitarianism</label>\r\n                      <input\r\n                        name=\"au3\"\r\n                        value=\"Act Utilitarianism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Kantian Ethics</label>\r\n                      <input\r\n                        name=\"ke3\"\r\n                        value=\"Kantian Ethics\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Aristotelianism</label>\r\n                      <input\r\n                        name=\"ar3\"\r\n                        value=\"Aristotelianism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Ethical Egoism</label>\r\n                      <input\r\n                        name=\"ee3\"\r\n                        value=\"Ethical Egoism\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                      <div className=\"filler\"></div>\r\n                      <label>Classical Natural Law Theory</label>\r\n                      <input\r\n                        name=\"cnlt3\"\r\n                        value=\"Classical Natural Law Theory\"\r\n                        type=\"checkbox\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <input className=\"addbutton\" type=\"submit\" value=\"Add\"></input>\r\n            </form>\r\n            <button\r\n              className={\r\n                this.state.questions.length > 0\r\n                  ? \"createbutton\"\r\n                  : \"createbutton unclickable\"\r\n              }\r\n              onClick={() => this.createQuestionaire()}\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.awaitingCreation ? (\r\n          <div className=\"fullscreen-modal\">\r\n            <div className=\"modal-content\">\r\n              <h3>Creating game</h3>\r\n              <Loading />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  submitQuestion = (e) => {\r\n    e.preventDefault();\r\n    let target = e.target;\r\n    let currentQuestions = this.state.questions;\r\n    console.log(target);\r\n    let question = {\r\n      /**TODO: ADD NAMES TO CHECKBOXES AND ADD TO THIS OBJECT */\r\n\r\n      question_id: this.state.currentlyChaning,\r\n      text: target.text.value,\r\n      img: target.img.value,\r\n      question: target.question.value,\r\n      option_1: {\r\n        text: target.option_1.value,\r\n        theories: this.getQuestionTheories(target, 1),\r\n      },\r\n      option_2: {\r\n        text: target.option_2.value,\r\n        theories: this.getQuestionTheories(target, 2),\r\n      },\r\n    };\r\n\r\n    if (this.state.flipCoin) {\r\n      question.option_3 = {\r\n        text: target.option_3.value,\r\n        theories: this.getQuestionTheories(target, 3),\r\n      };\r\n    }\r\n\r\n    currentQuestions.push(question);\r\n    let currentlyChaning = this.state.currentlyChaning + 1;\r\n    this.setState({\r\n      questions: currentQuestions,\r\n      currentlyChaning,\r\n      flipCoin: false,\r\n    });\r\n\r\n    var frm = document.getElementsByName(\"question-form\")[0];\r\n    frm.reset();\r\n  };\r\n  handleInitFormChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleInitFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ initiated: true });\r\n  };\r\n  handleFlipCheck = (e) => {\r\n    this.setState({ flipCoin: e.target.checked });\r\n  };\r\n\r\n  getQuestionTheories = (form, optionIndex) => {\r\n    let allTheories = this.state.theories;\r\n    let theories = [];\r\n    for (let i = 0; i < form.length; i++) {\r\n      if (\r\n        form[i].type == \"checkbox\" &&\r\n        form[i].checked &&\r\n        form[i].name.includes(optionIndex)\r\n      ) {\r\n        theories.push(form[i].value);\r\n        //*ADDS THEORY TO QUESTIONAIRE IF NOT ALREADY ADDED */\r\n        if (allTheories.indexOf(form[i].value) === -1) {\r\n          allTheories.push(form[i].value);\r\n          console.log(allTheories);\r\n          this.setState({ theories: allTheories });\r\n        }\r\n      }\r\n    }\r\n    return theories;\r\n  };\r\n  getAllTheories = () => {};\r\n  createQuestionaire = (async) => {\r\n    this.setState({ awaitingCreation: true });\r\n    let questionaire = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      theories: this.state.theories,\r\n      questions: this.state.questions,\r\n    };\r\n\r\n    axios\r\n      .post(\"/addQuestionaire\", {\r\n        params: {\r\n          questionaire: questionaire,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ awaitingCreation: false });\r\n        this.props.history.push({\r\n          pathname: \"/created\",\r\n          state: {\r\n            data: response.data,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\n\r\nexport default CreateGame;\r\n","import React, { Component } from \"react\";\r\nimport PinInput from \"react-pin-input\";\r\nimport \"./inputpin.css\";\r\nclass InputPin extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"inputpin-wrapper\">\r\n        <h3>Enter game code</h3>\r\n        <PinInput\r\n          length={4}\r\n          initialValue=\"\"\r\n          onChange={(value, index) => {}}\r\n          type=\"numeric\"\r\n          style={{ padding: \"10px\" }}\r\n          inputStyle={{ borderColor: \"gray\" }}\r\n          inputFocusStyle={{ borderColor: \"red\" }}\r\n          onComplete={(value, index) => this.props.redir(value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputPin;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./homescreen.css\";\r\nimport Nav from \"../nav/nav\";\r\nimport InputPin from \"./inputpin/inputpin\";\r\n\r\nclass Homescreen extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"homescreen-wrapper\">\r\n        <InputPin redir={(value) => this.redirect(value)} />\r\n        <h3>or..</h3>\r\n        <Link to=\"/create\">Create a new game</Link>\r\n        <Nav />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  redirect = (value) => {\r\n    this.props.history.push(\"/questionaire/\" + value);\r\n  };\r\n}\r\n\r\nexport default Homescreen;\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"./loading/loading\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./questionaire.css\";\r\nimport Nav from \"../nav/nav\";\r\nclass Questionaire extends Component {\r\n  state = {\r\n    started: false,\r\n    isLoading: true,\r\n    questionaire: {},\r\n    currentQuestionIndex: 0,\r\n    currentQuestion: {},\r\n    scores: [],\r\n    answers: [],\r\n  };\r\n  async componentDidMount() {\r\n    console.log(uuidv1());\r\n    await this.setState({ id: this.props.match.params[\"id\"] });\r\n    this.fetchQuestionaire();\r\n  }\r\n  render() {\r\n    /** Loading while getting questionaire from backend/mongodb */\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <div className=\"questionaire-wrapper\">\r\n          <Loading />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.notFound) {\r\n      return (\r\n        <div className=\"questionaire-wrapper\">\r\n          <h1>Not found..</h1>\r\n          <Link to=\"/\">Back</Link>\r\n        </div>\r\n      );\r\n    }\r\n    /**If a questionaire of ID from input can't be found */\r\n    return !this.state.started ? (\r\n      <div className=\"questionaire-wrapper\">\r\n        <Nav />\r\n        <div className=\"questionaire-init\">\r\n          <h1>{this.state.questionaire.title}</h1>\r\n          <p>{this.state.questionaire.description}</p>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ started: true });\r\n            }}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      /**If a questionaire matches ID */\r\n      <div className=\"questionaire-wrapper\">\r\n        <Nav />\r\n        <div className=\"section\">\r\n          <h1 className=\"questionaire-title\">\r\n            {this.state.questionaire.title}\r\n          </h1>\r\n        </div>\r\n        <div className=\"question-section section\">\r\n          {this.state.currentQuestion.img ? (\r\n            <img src={this.state.currentQuestion.img} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <p>{this.state.currentQuestion.text}</p>\r\n        </div>\r\n        <div className=\"button-section section\">\r\n          <p>{this.state.currentQuestion.question}</p>\r\n          <div className=\"button-container\">\r\n            <div className=\"horizontal-buttons\">\r\n              <button\r\n                className=\"option-btn option-btn-1 btn\"\r\n                onClick={() =>\r\n                  this.nextQuestion(\r\n                    this.state.currentQuestion,\r\n                    this.state.currentQuestion.option_1\r\n                  )\r\n                }\r\n              >\r\n                {this.state.currentQuestion.option_1.text}\r\n              </button>\r\n              <button\r\n                className=\"option-btn option-btn-2 btn\"\r\n                onClick={() =>\r\n                  this.nextQuestion(\r\n                    this.state.currentQuestion,\r\n                    this.state.currentQuestion.option_2\r\n                  )\r\n                }\r\n              >\r\n                {this.state.currentQuestion.option_2.text}\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.currentQuestion.option_3 ? (\r\n              <button\r\n                className=\"flip-btn btn\"\r\n                onClick={() =>\r\n                  this.nextQuestion(\r\n                    this.state.currentQuestion,\r\n                    this.state.currentQuestion.option_3\r\n                  )\r\n                }\r\n              >\r\n                flip a coin\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  reloadImg = () => {\r\n    return this.state.currentQuestion.img + \"#\" + uuidv1();\r\n  };\r\n  incrementScore = (theories) => {\r\n    let currentScores = this.state.scores;\r\n    theories.map((theory) => {\r\n      currentScores.map((score) => {\r\n        if (score.theory == theory) {\r\n          let newScore = score.score + 1;\r\n          score.score = newScore;\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ scores: currentScores });\r\n  };\r\n  decrementScore = () => {};\r\n  generateScores = () => {\r\n    let theories = this.state.questionaire.theories;\r\n    let scores = [];\r\n    theories.map((theory) => {\r\n      let temp = { theory: theory, score: 0 };\r\n      scores.push(temp);\r\n    });\r\n    this.setState({ scores: scores });\r\n  };\r\n  nextQuestion = (question, option) => {\r\n    let curr = this.state.currentQuestionIndex;\r\n    let answers = this.state.answers;\r\n    let answer = {\r\n      question_id: question.question_id,\r\n      answer: option.text,\r\n      theories: option.theories,\r\n    };\r\n    answers.push(answer);\r\n    this.incrementScore(option.theories);\r\n    if (curr < this.state.questionaire.questions.length - 1) {\r\n      curr++;\r\n      this.setState({\r\n        currentQuestionIndex: curr,\r\n        currentQuestion: this.state.questionaire.questions[curr],\r\n        answers: answers,\r\n      });\r\n    } else {\r\n      this.setState({ answers: answers });\r\n      this.props.history.push({\r\n        pathname: \"/summary\",\r\n        state: {\r\n          summary: {\r\n            questionaire_id: this.state.questionaire.id,\r\n            scores: this.state.scores,\r\n            answers: answers,\r\n            date: new Date(),\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  fetchQuestionaire = () => {\r\n    axios\r\n      .get(\"/getQuestionaire\", {\r\n        params: {\r\n          ID: this.state.id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let questionaire = response.data[0];\r\n        if (questionaire) {\r\n          this.setState({\r\n            isLoading: false,\r\n            questionaire: questionaire,\r\n            currentQuestion: questionaire[\"questions\"][0],\r\n          });\r\n          this.generateScores();\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n            notFound: true,\r\n            questionaire: { title: \"Not found..\" },\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\n\r\nexport default Questionaire;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\r\n\r\nimport \"./summary.css\";\r\nimport PlaceholdeNav from \"../nav/nav\";\r\nclass Summary extends Component {\r\n  state = { summary: {} };\r\n\r\n  async componentDidMount() {\r\n    await this.setState({ summary: this.props.history.location.state });\r\n    this.pushAnswers();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Summary</h1>\r\n        <PlaceholdeNav />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  pushAnswers = () => {\r\n    console.log(this.state.summary);\r\n    axios\r\n      .post(\"/postAnswers\", {\r\n        params: { summary: this.state.summary },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  };\r\n}\r\n\r\nexport default Summary;\r\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Homescreen from \"./homescreen/homescreen\"\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state={response:[]}\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Press the button to recieve a message from the back-end</h1>\n        <button onClick={() => this.testBackend()}>Click</button>\n        <h3>Message:</h3>\n        <h2>{this.state.response.data}</h2>\n        <Homescreen/>\n      </div>\n    );\n  }\n  \n\n   testBackend = async =>{\n    axios.get('/message').then(response=>{\n      console.log(response)\n      if(response.status===200){\n        this.setState({response:response})\n      }\n     \n    }).catch(function (error) {\n      console.log(error);\n    });\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport \"./created.css\";\r\nclass Created extends Component {\r\n  state = { createdgame: { data: { id: \"0000\" } } };\r\n\r\n  async componentDidMount() {\r\n    if (this.props.history.location.state) {\r\n      await this.setState({ createdgame: this.props.history.location.state });\r\n      this.generateLink();\r\n    }\r\n    this.generateLink();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"created-wrapper\">\r\n        <h3>Success!</h3>\r\n        <p>\r\n          Your game has been created with pin code:{\" \"}\r\n          {this.state.createdgame.data.id}\r\n        </p>\r\n        <p>Link to your game: </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  generateLink = () => {\r\n    console.log(\r\n      process.env.PUBLIC_URL + \"/quesionaire/\" + this.state.createdgame.data.id\r\n    );\r\n  };\r\n}\r\n\r\nexport default Created;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Creategame from \"./creategame/creategame.jsx\";\nimport Homescreen from \"./homescreen/homescreen.jsx\";\nimport Questionaire from \"./questionaire/questionaire.jsx\";\nimport Summary from \"./summary/summary.jsx\";\nimport App from \"./App\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Created from \"./creategame/created/created\";\n\nconst routing = (\n  <HashRouter>\n    <Route exact path=\"/test\" component={App} />\n    <Route exact path=\"/\" component={Homescreen} />\n    <Route path=\"/create\" component={Creategame} />\n    <Route path=\"/summary\" component={Summary} />\n    <Route path=\"/questionaire/:id\" component={Questionaire} />\n    <Route path=\"/created\" component={Created} />\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}